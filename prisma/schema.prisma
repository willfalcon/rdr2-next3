// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       String
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}


model Vendor {
  id Int @id @default(autoincrement())
  name String
  slug String @unique
  categories Category[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  slug String @unique
  vendor Vendor @relation(fields:[vendorId], references: [id])
  vendorId Int
  items Item[]
}

model Item {
  id Int @id @default(autoincrement())
  name String
  slug String @unique
  categories Category[]
}

model ItemMaterial {
  id Int @id @default(autoincrement())
  material Material @relation(fields:[materialId], references: [id])
  materialId Int
  count Int
} 

model Material {
  id Int @id @default(autoincrement())
  name String
  legendary Boolean @default(false)
  weapons Weapon[]
  items ItemMaterial[]
}

model MaterialType {
  id Int @id @default(autoincrement())
  name String
}

model Weapon {
  id Int @id @default(autoincrement())
  weapon WeaponType @relation(fields: [weaponType], references: [id])
  weaponType Int
  ammo Ammo @relation(fields: [ammoId], references: [id])
  ammoId Int
  material Material[]
}

model WeaponType {
  id Int @id @default(autoincrement())
  name String
  weapons Weapon[]
}

model Ammo {
  id Int @id @default(autoincrement())
  name String
  weapons Weapon[]
}